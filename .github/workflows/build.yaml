name: Build Cybr ISO

on:
  workflow_dispatch:
    inputs:
      force_fail:
        description: "Force fail API"
        required: false
        default: "No"
        type: choice
        options: ["No", "Yes"]

jobs:
  build-os:
    runs-on: self-hosted
    outputs:
      build_success: ${{ steps.set-status.outputs.success }}
    steps:
      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y git curl debootstrap syslinux-utils isolinux xorriso squashfs-tools mtools rsync sshpass live-build

      - name: Clone Kali Live-Build Config
        run: |
          git clone https://gitlab.com/kalilinux/build-scripts/live-build-config.git
          cd live-build-config
          echo 'LB_ISO_IMAGE_NAME="cybr"' | tee -a auto/config
          echo 'LB_ISO_VOLUME="cybr"' | tee -a auto/config
          echo 'LB_BUILD_WITH_CHROOT="true"' | tee -a auto/config
          echo 'LB_COMPRESSION="xz"' | tee -a auto/config
          echo 'LB_BOOTAPPEND_LIVE="boot=live components hostname=cybr username=root"' | tee -a auto/config
   
      - name: Add Custom Packages
        run: |
          cd live-build-config
          mkdir -p config/package-lists
          echo "plasma-desktop sddm aircrack-ng nmap goldeneye hydra sqlmap iptables ufw fail2ban clamav wireshark tcpdump nano curl wget cowsay beef wine" | tee config/package-lists/cybr.list.chroot

      
          HOME_URL="https://wolfos.uk/"
          ANSI_COLOR="1;31"
          OSEOF
          
          # Update lsb-release file
          cat > /etc/lsb-release << 'LSBEOF'
          DISTRIB_ID=cybr
          DISTRIB_RELEASE=rolling
          DISTRIB_CODENAME=cybr
          DISTRIB_DESCRIPTION="cybr rolling"
          LSBEOF
          
          # Update issue files
          echo "cybr \\n \\l" > /etc/issue
          echo "cybr" > /etc/issue.net
          
          # Update hostname
          echo "cybr" > /etc/hostname
          
          # Update hosts file
          sed -i 's/kali/cybr/g' /etc/hosts 2>/dev/null || true
          echo "127.0.1.1    cybr" >> /etc/hosts
          
          # Update motd
          cat > /etc/motd << 'MOTDEOF'
          
          Welcome to cybr - Security-Focused Linux Distribution
          
          MOTDEOF
          
          # Update desktop files and branding
          find /usr/share/applications -name "*.desktop" -exec sed -i 's/Kali/cybr/g; s/kali/cybr/g' {} \; 2>/dev/null || true
          
          # Update any remaining Kali references
          find /etc -type f -name "*.conf" -exec sed -i 's/kali/cybr/g; s/Kali/cybr/g' {} \; 2>/dev/null || true
          
          # Update default user shell prompt
          if [ -f /etc/bash.bashrc ]; then
              sed -i 's/kali/cybr/g; s/Kali/cybr/g' /etc/bash.bashrc
          fi
          
          # Update any package manager sources that reference kali
          if [ -f /etc/apt/sources.list ]; then
              sed -i 's/kali-rolling/cybr-rolling/g' /etc/apt/sources.list
          fi
          
          EOF
          chmod +x config/hooks/normal/0010-cybr-branding.hook.chroot

          
      - name: Configure GRUB and Remove Plymouth
        run: |
          cd live-build-config
          mkdir -p config/includes.chroot/etc/default
          echo 'GRUB_CMDLINE_LINUX_DEFAULT="quiet splash plymouth.enable=0"' | tee config/includes.chroot/etc/default/grub
          sed -i 's/quiet splash/quiet/' config/includes.chroot/etc/default/grub
          sed -i '/^GRUB_CMDLINE_LINUX_DEFAULT/s/quiet splash/quiet/' config/includes.chroot/etc/default/grub
          sed -i '/^GRUB_CMDLINE_LINUX_DEFAULT/s/plymouth.enable=0//g' config/includes.chroot/etc/default/grub

      - name: Build Cybr ISO
        run: |
          cd live-build-config
          bash ./build.sh --variant minimal --verbose

      - name: Rename and Verify ISO
        run: |
          mv live-build-config/images/kali-linux-rolling-live-minimal-amd64.iso ./cybr.iso
          ls -lh cybr.iso

      - name: Upload to SourceForge
        env:
          SF_USER: ${{ secrets.SF_USER }}
          SF_PASS: ${{ secrets.SF_PASS }}
          OSVER: 1
        run: |
          sshpass -p "$SF_PASS" scp -o StrictHostKeyChecking=no ./cybr.iso "$SF_USER@frs.sourceforge.net:/home/frs/project/wolfos/Cybr-v${OSVER}.iso"


      - name: Set Build Status
        id: set-status
        run: |
          if [[ "${{ github.event.inputs.force_fail }}" == "Yes" ]]; then
            echo "success=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "success=true" >> $GITHUB_OUTPUT

  notify-api:
    needs: build-os
    runs-on: ubuntu-latest
    if: always()
    steps:
      - run: curl --max-time 30 "${{ secrets.API_URL }}"
