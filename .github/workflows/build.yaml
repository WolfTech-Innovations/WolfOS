name: Build Cybr ISO

on:
  workflow_dispatch:
    inputs:
      force_fail:
        description: "Force fail API"
        required: false
        default: "No"
        type: choice
        options: ["No", "Yes"]

jobs:
  build-os:
    runs-on: self-hosted
    outputs:
      build_success: ${{ steps.set-status.outputs.success }}
    steps:
      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y git curl debootstrap syslinux-utils isolinux xorriso squashfs-tools mtools rsync sshpass live-build

      - name: Clone Kali Live-Build Config
        run: |
          git clone https://gitlab.com/kalilinux/build-scripts/live-build-config.git
          cd live-build-config
          echo 'LB_ISO_IMAGE_NAME="cybr"' | tee -a auto/config
          echo 'LB_ISO_VOLUME="cybr"' | tee -a auto/config
          echo 'LB_BUILD_WITH_CHROOT="true"' | tee -a auto/config
          echo 'LB_COMPRESSION="xz"' | tee -a auto/config
          echo 'LB_BOOTAPPEND_LIVE="boot=live components hostname=cybr username=root"' | tee -a auto/config
      
      - name: Add Custom Packages
        run: |
             cd live-build-config
             mkdir -p config/package-lists
             echo "plasma-desktop sddm nano curl wget git nmap iptables ufw fail2ban clamav suricata psad rkhunter lynis tripwire wireshark hydra cewl theharvester dnsenum whois dnsutils john hashcat sqlmap gobuster dirb steghide binwalk radare2 exiftool" | tee config/package-lists/cybr.list.chroot

      - name: Create OS Release Branding Hook
        run: |
          mkdir -p live-build-config/config/hooks/normal
          wget https://github.com/WolfTech-Innovations/cybr/edit/master/scripts/archwrapper.bash -o live-build-config/config/hooks/normal/0020-archwrapper.hook.chroot
          chmod 777 live-build-config/config/hooks/normal/0020-archwrapper.hook.chroot
    
      - name: Build Cybr ISO
        run: |
          cd live-build-config
          bash ./build.sh --variant minimal --verbose

      - name: Rename and Verify ISO
        run: |
          mv live-build-config/images/kali-linux-rolling-live-minimal-amd64.iso ./cybr.iso
          ls -lh cybr.iso

      - name: Upload to SourceForge
        env:
          SF_USER: ${{ secrets.SF_USER }}
          SF_PASS: ${{ secrets.SF_PASS }}
          OSVER: 2
        run: |
          sshpass -p "$SF_PASS" scp -o StrictHostKeyChecking=no ./cybr.iso "$SF_USER@frs.sourceforge.net:/home/frs/project/wolfos/Cybr-v${OSVER}.iso"


      - name: Set Build Status
        id: set-status
        run: |
          if [[ "${{ github.event.inputs.force_fail }}" == "Yes" ]]; then
            echo "success=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "success=true" >> $GITHUB_OUTPUT

  notify-api:
    needs: build-os
    runs-on: ubuntu-latest
    if: always()
    steps:
      - run: curl --max-time 30 "${{ secrets.API_URL }}"
